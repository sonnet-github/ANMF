@using System.Text.RegularExpressions;

@using Umbraco.Web.Models;
@using Umbraco.Web.PublishedModels;

@using ContentModels = Umbraco.Web.PublishedModels;

@inherits Umbraco.Web.Mvc.UmbracoViewPage

@{ 
    IPublishedContent campaignRoot = Model.Value<IPublishedContent>("latestMediaCampaignSource");
    int maxItem = Model.Value<int>("latestMediaCampaignMaxItem");
    int slickIndex = -1;

    List<IPublishedContent> campaigns = new List<IPublishedContent>();

    if (campaignRoot != null)
    {
        campaigns = campaignRoot.DescendantsOrSelfOfType("mediaAndCampaign")
            .OrderByDescending(o => o.Value<DateTime>("campaignDate"))
            .Take(maxItem)
            .ToList();
    }
    else
    {
        campaigns = Umbraco.ContentAtRoot().DescendantsOrSelfOfType("mediaAndCampaign")
            .OrderByDescending(o => o.Value<DateTime>("campaignDate"))
            .Take(maxItem)
            .ToList();
    }
}

@if(campaigns != null && campaigns.Any())
{
<section id="latest-campaign">
    <div class="uk-container">
        <h2 class="primary--heading f--bold">Latest Campaigns</h2>
        <!-- MEDIA AND CAMPAIGN SLIDER -->
        <div class="media-campaign__slider uk-flex">
            @foreach(ContentModels.MediaAndCampaign campaign in campaigns)
            {
                string campaignTitle = campaign.Value<string>("campaignTitle");
                string campaignImage = campaign.Value<IPublishedContent>("campaignImage")?.Url ?? "";
                string campaignDate = campaign.Value<DateTime>("campaignDate").ToString("dd MMMM yyyy");
                string campaignSynopsis = campaign.Value<string>("campaignSynopsis");
                string campaignContent = campaign.Value<string>("campaignContent");
                string campaignUrl = campaign.Url();
                string plainCampaignSynopsis = string.Empty;
                slickIndex++;

                if(!string.IsNullOrEmpty(campaignSynopsis))
                {
                    Regex htmlTagPattern = new System.Text.RegularExpressions.Regex("<[^>]*>");
                    plainCampaignSynopsis = htmlTagPattern.Replace(campaignSynopsis, string.Empty);                            
                }

                <div class="media-campaign__slider-item">
                    @if(!string.IsNullOrEmpty(campaignImage))
                    {
                        <figure class="uk-position-relative no--pseudo">                                
                            <img src="@campaignImage" alt="@campaignTitle" class="uk-width-1-1">                                
                        </figure>
                    }

                    <div class="media-campaign__slider-item_info">
                        <h2 class="primary--heading text--black f--18 f--bold"><span class="primary--subheading uk-text-uppercase text--blue">Campaign</span>
                            @if(!string.IsNullOrEmpty(campaignTitle))
                            {
                                @Html.Raw(campaignTitle)                                    
                            }
                        </h2>

                        <p class="media-campaign__slider-item_date text--gray f--12">
                            @campaignDate
                        </p>

                        @if(!string.IsNullOrEmpty(campaignSynopsis))
                        {
                            <p class="text--gray f--14">@plainCampaignSynopsis</p>
                        }                                

                        <p><a href="@campaignUrl" class="primary--cta_text">Read more</a></p>
                    </div>
                </div>
            } 
        </div>
        <!--: END MEDIA AND CAMPAIGN SLIDER -->
    </div>
</section>
}